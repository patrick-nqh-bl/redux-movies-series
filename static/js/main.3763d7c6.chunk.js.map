{"version":3,"sources":["APIKey.js","components/layout/spinner.gif","components/layout/Navbar.js","components/layout/Footer.js","actions/searchActions.js","actions/types.js","components/home/SearchForm.js","components/layout/Spinner.js","components/home/MovieCard.js","components/home/MoviesContainer.js","components/home/Landing.js","reducers/searchReducer.js","reducers/index.js","store.js","components/home/Movie.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","id","Footer","href","target","rel","setLoading","type","SearchForm","onChange","e","props","searchMovie","value","onSubmit","preventDefault","fetchMovies","text","this","name","placeholder","Component","connect","state","movies","dispatch","payload","axios","get","APIKey","then","response","data","catch","err","console","log","Spinner","src","spinner","alt","style","width","margin","display","MovieCard","movie","Poster","Title","Year","imdbID","MoviesContainer","content","Response","Search","map","index","key","Landing","loading","initialStates","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Movie","fetchMovie","match","params","movieInfo","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3763d7c6.chunk.js","sourcesContent":["module.exports = {\r\n  'APIKey' : '69d8aa0d'\r\n}","module.exports = __webpack_public_path__ + \"static/media/spinner.205810b0.gif\";","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-light bg-dark mb-5\">\r\n        <div className=\"container\">\r\n          <div className=\"navbar-header\">\r\n            <Link to=\"/\" className=\"navbar-brand text-white text-lg brand-text\">\r\n              MovieSeriesInfo\r\n            </Link>\r\n          </div>\r\n          <ul className=\"navbar-nav ml-auto text-light d-inline-block\">\r\n            <li className=\"nav-item d-inline-block mr-4\">\r\n              <i className=\"fab fa-imdb fa-5x\" id=\"imdb-logo\" />\r\n            </li>\r\n            <li className=\"nav-item d-inline-block mr-4\">\r\n              <i className=\"fab fa-react fa-5x\" id=\"react-logo\" />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","/* eslint-disable react/jsx-no-target-blank */\r\nimport React from 'react'\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <div className=\"footer p-3 mt-4 text-center bg-dark text-light\">\r\n          Developed By:\r\n          <span className=\"text-warning font-weight-normal\">\r\n            Patrick\r\n          </span>\r\n          , Using <i className=\"fab fa-react\" /> React JS &amp; Redux JS integrated with external movies data API\r\n          <a \r\n            href=\"http://www.omdbapi.com/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            OMDB\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from './types';\r\nimport axios from 'axios';\r\nimport { APIKey } from '../APIKey';\r\n\r\nexport const searchMovie = text => dispatch =>{\r\n  dispatch({\r\n    type: SEARCH_MOVIE,\r\n    payload: text,\r\n  })\r\n} \r\n\r\nexport const fetchMovies = text => dispatch => {\r\n  axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n       .then(response => dispatch({\r\n         type: FETCH_MOVIES,\r\n         payload: response.data\r\n       }))\r\n       .catch(err => console.log(err));\r\n}\r\n\r\nexport const fetchMovie = id => dispatch => {\r\n  axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n        .then(response => dispatch({\r\n          type: FETCH_MOVIE,\r\n          payload: response.data\r\n        }))\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: LOADING,\r\n  }\r\n}","export const SEARCH_MOVIE = 'SEARCH_MOVIE';\r\nexport const FETCH_MOVIES = 'FETCH_MOVIES';\r\nexport const FETCH_MOVIE = 'FETCH_MOVIE';\r\nexport const LOADING = 'LOADING';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { searchMovie, fetchMovies, setLoading } from '../../actions/searchActions';\r\n\r\nexport class SearchForm extends Component {\r\n  onChange = e => {\r\n    this.props.searchMovie(e.target.value);\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.fetchMovies(this.props.text);\r\n    this.props.setLoading();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"jumbotron jumbotron-fluid mt-5 text-center\">\r\n        <div className=\"container\">\r\n          <h1 className=\"display-4 mb-3\">\r\n            <i className=\"fa fa-search\" /> Search for a movie , TV series ..\r\n          </h1>\r\n          <form id=\"searchForm\" onSubmit={this.onSubmit}>\r\n            <input \r\n              type=\"text\"\r\n              className=\"form-control\" \r\n              name=\"searchText\"\r\n              placeholder=\"Search Movies, TV Series ...\"\r\n              onChange={this.onChange}  \r\n            />\r\n            <button type=\"submit\" className=\"btn btn-primary btn-bg mt-3\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  text: state.movies.text\r\n})\r\n\r\nexport default connect(mapStateToProps, {searchMovie, fetchMovies, setLoading})(SearchForm);\r\n","import React from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div>\r\n      <img \r\n        src={spinner} \r\n        alt=\"Loading...\"\r\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class MovieCard extends Component {\r\n  render() {\r\n    const { movie } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"col-md-3 mb-5\">\r\n          <div className=\"card card-body bg-dark text-center h-100\">\r\n            <img src={movie.Poster} alt=\"Movie Cover\" className=\"w-100 mb-2\" />\r\n            <h5 className=\"text-light card-title\">\r\n              {movie.Title} - {movie.Year}\r\n            </h5>\r\n            <Link to={'/movies/' + movie.imdbID} className=\"btn btn-primary\">\r\n              Movie Details\r\n              <i className=\"fas fa-chevron-right\" />\r\n            </Link>\r\n          </div>\r\n        </div>  \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MovieCard\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MovieCard from './MovieCard';\r\n\r\nexport class MoviesContainer extends Component {\r\n  render() {\r\n    const { movies } = this.props;\r\n    let content = '';\r\n\r\n    content = movies.Response === \"True\"\r\n      ? movies.Search.map((movie, index) => \r\n        <MovieCard \r\n          key={index} \r\n          movie={movie}\r\n        />) \r\n      : null;\r\n    return (\r\n      <div className=\"row\">\r\n        {content}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.movies.movies,\r\n})\r\n\r\nexport default connect(mapStateToProps)(MoviesContainer);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SearchForm from './SearchForm';\r\nimport Spinner from '../layout/Spinner';\r\nimport MoviesContainer from './MoviesContainer';\r\n\r\nexport class Landing extends Component {\r\n  render() {\r\n    const { loading } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <SearchForm />\r\n        {loading ? <Spinner /> : <MoviesContainer />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.movies.loading\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from '../actions/types';\r\n\r\nconst initialStates = {\r\n  text : '',\r\n  movies : [],\r\n  loading: false,\r\n  movie: [] \r\n}\r\n\r\nexport default function(state = initialStates, action) {\r\n  switch (action.type) {\r\n    case SEARCH_MOVIE: \r\n      return {\r\n        ...state,\r\n        text: action.payload,\r\n        loading: false\r\n      };\r\n    case FETCH_MOVIES: \r\n    return {\r\n      ...state,\r\n      movies: action.payload,\r\n      loading:false\r\n    };\r\n    case FETCH_MOVIE: \r\n    return {\r\n      ...state,\r\n      movie: action.payload,\r\n      loading: false\r\n    };\r\n    case LOADING: \r\n    return {\r\n      ...state,\r\n      loading: true,\r\n    };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport searchReducer from './searchReducer';\r\n\r\nexport default combineReducers({\r\n  movies: searchReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport rootReducer from './reducers';\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchMovie, setLoading } from '../../actions/searchActions';\r\nimport Spinner from '../layout/Spinner';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Movie extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchMovie(this.props.match.params.id);\r\n    this.props.setLoading();\r\n  }\r\n  render() {\r\n    const { loading, movie } = this.props;\r\n\r\n    let movieInfo = (\r\n      <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4 card card-body\">\r\n          <img src={movie.Poster} alt=\"Poster\" className=\"thumbnail\" />\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          <h2 className=\"mb-4\">{movie.Title}</h2>\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">\r\n              <strong>Genre:</strong> {movie.Genre}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Released:</strong> {movie.Released}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Rated:</strong> {movie.Rated}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>IMDB Rating:</strong> {movie.imdbRating}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Director</strong> {movie.Director}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Writer:</strong> {movie.Writer}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Actors:</strong> {movie.Actors}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"card card-body bg-dark my-5 text-light\">\r\n          <div className=\"col-md-12\">\r\n            <h3>About</h3>\r\n            {movie.Plot}\r\n            <hr />\r\n            <a\r\n              href={'https://www.imdb.com/title/' + movie.imdbID}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"btn btn-primary\"\r\n            >\r\n              View on IMDB\r\n            </a>\r\n            <Link to=\"/\" className=\"btn btn-default text-light\">\r\n              Go Back To Search\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    )\r\n\r\n    let content = loading ? <Spinner /> : movieInfo;\r\n    return (\r\n      <>\r\n      {content}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.movies.loading,\r\n  movie: state.movies.movie,\r\n})\r\n\r\nexport default connect(mapStateToProps, { fetchMovie, setLoading })(Movie);\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Footer from \"./components/layout/Footer\";\nimport Landing from \"./components/home/Landing\";\nimport store from \"./store\";\nimport Movie from \"./components/home/Movie\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/movies/:id\" component={Movie} />\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}